{"version":3,"sources":["photos/CosmoNeutral.jpg","DataContext.js","components/PrimaryButton.js","components/MainContainer.js","components/Form.js","components/Input.js","photos/CosmoSad.jpg","photos/CosmoSmile2.jpg","Step1.js","cosmoClick.js","components/Header.js","App.js","index.js"],"names":["DataContext","createContext","DataProvider","children","useState","photo","cosmo","data","setData","Provider","value","useData","useContext","useStyles","makeStyles","theme","root","margin","spacing","PrimaryButton","props","styles","Button","type","fullWidth","variant","color","className","marginTop","display","flexDirection","alignItems","MainContainer","Container","component","maxWidth","width","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","schema","yup","shape","secretCode","typeError","test","val","JSON","stringify","length","Step1","success","setSuccess","useHistory","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","Typography","onSubmit","data2","cosmoSmile","Swal","fire","icon","title","text","cosmoSad","setTimeout","id","label","name","error","helperText","message","responses","cosmoClick","Math","floor","random","fontFamily","textAlign","fontSize","textShadow","imgStyle","Header","onClick","class","src","alt","style","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aeca16a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/CosmoNeutral.2d2f2f57.jpg\";","import React, { createContext, useState, useContext } from 'react'\r\nimport cosmo from './photos/CosmoNeutral.jpg';\r\n\r\nconst DataContext = createContext()\r\n\r\nexport const DataProvider = ({children}) => {\r\n  const [data, setData] = useState({photo: cosmo});\r\n\r\n  \r\n  return <DataContext.Provider value={{data, setData}}>\r\n    {children}\r\n  </DataContext.Provider>\r\n}\r\n\r\nexport const useData = () => useContext(DataContext)","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport const PrimaryButton = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Button\r\n      type=\"submit\"\r\n      fullWidth\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      className={styles.root}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(4),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nexport const MainContainer = ({ children, ...props }) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Container\r\n      className={styles.root}\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport const Form = ({children, ...props}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <form {...props} className={styles.root} noValidate>\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n","import React, { forwardRef } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nexport const Input = forwardRef((props, ref) => {\r\n  return (\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"normal\"\r\n      inputRef={ref}\r\n      fullWidth\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n","export default __webpack_public_path__ + \"static/media/CosmoSad.bf387a31.jpg\";","export default __webpack_public_path__ + \"static/media/CosmoSmile2.faaadcd4.jpg\";","import React, {useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useData } from \"./DataContext\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers\";\r\nimport { PrimaryButton } from \"./components/PrimaryButton\";\r\nimport { MainContainer } from \"./components/MainContainer\";\r\nimport { Form } from \"./components/Form\";\r\nimport { Input } from \"./components/Input\";\r\nimport * as yup from \"yup\";\r\nimport Confetti from \"react-confetti\";\r\nimport Swal from \"sweetalert2\";\r\nimport cosmo from './photos/CosmoNeutral.jpg';\r\nimport cosmoSad from './photos/CosmoSad.jpg';\r\nimport cosmoSmile from './photos/CosmoSmile2.jpg'\r\n\r\n\r\n\r\nconst schema = yup.object().shape({\r\n  secretCode: yup.number()\r\n    .typeError('The secret code is a 6 digit number')\r\n    .test('len', 'The secret code is a 6 digit number', val => JSON.stringify(val).length === 6)\r\n    \r\n\r\n});\r\n\r\nexport const Step1 = () => {\r\n  const [success, setSuccess] = useState(false);\r\n  const history = useHistory();\r\n  const { data, setData } = useData();\r\n  const { register, handleSubmit, errors } = useForm({\r\n    defaultValues: { secretCode: ''},\r\n    mode: \"onBlur\",\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data2) => {\r\n    if(data2.secretCode===666666){\r\n    setSuccess(true)\r\n    setData({photo: cosmoSmile})\r\n    Swal.fire({\r\n      icon: 'success',\r\n      title: 'Congratulations!',\r\n      text: 'You entered the correct code!',\r\n      })\r\n  } else {\r\n    setData({photo: cosmoSad});\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Incorrect',\r\n      text: 'Keep trying!!',\r\n      });\r\n    setTimeout(()=>{setData({photo: cosmo})}, 6000);\r\n  }\r\n  };\r\n\r\n  if (success) {\r\n    return (\r\n    <>\r\n    <Confetti />\r\n    \r\n    </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <MainContainer>\r\n      <Typography component=\"h2\" variant=\"h5\">\r\n        ðŸŽ² What is the secret code?\r\n      </Typography>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Input\r\n          ref={register}\r\n          id=\"secretCode\"\r\n          type=\"number\"\r\n          label=\"Secret code\"\r\n          name=\"secretCode\"\r\n          error={!!errors.secretCode}\r\n          helperText={errors?.secretCode?.message}\r\n        />\r\n\r\n        <PrimaryButton>Submit</PrimaryButton>\r\n      </Form>\r\n    </MainContainer>\r\n  );\r\n};\r\n","import Swal from \"sweetalert2\";\r\n\r\nlet responses = [\r\n    'Woof! What do you want?',\r\n    \"Woof! Woof!\",\r\n    \"Woooofff!!!\",\r\n    \"Mieow!..I mean Woof!!\",\r\n    'Whine! Stop clicking me!', \r\n    'Ahhh-Wooooo do you think you are?', \r\n    'Oyyyyy!!!',     \r\n    'Woof Woof. Please leave me alone', \r\n    'Be kind and leave me alone',\r\n    'What now!',\r\n    \"If you click me again i'll bite your ankle\",\r\n    \"Woof! I don't like being clicked, thank you.\",\r\n    \"Woof! Woof! Grrrrrrr!\"\r\n]\r\n\r\nexport const cosmoClick = () => {\r\n    Swal.fire({\r\n        text: responses[Math.floor(Math.random()*responses.length)],\r\n        })\r\n    //alert(responses[Math.floor(Math.random()*responses.length)])\r\n}","import React from \"react\";\r\nimport { useData } from \"../DataContext\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {cosmoClick} from '../cosmoClick.js'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    fontFamily: \"Permanent Marker\",\r\n    textAlign: \"center\",\r\n    fontSize: \"40px\",\r\n    color: \"deeppink\",\r\n    textShadow: \"1px 1px darkmagenta\",\r\n  },\r\n}));\r\n\r\nconst imgStyle = {\r\n  maxWidth: \"20%\"\r\n}\r\n\r\nexport const Header = () => {\r\n  const { data } = useData();\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    <Typography className={styles.root} component=\"h1\" variant=\"h5\">\r\n      Rhys's Amazing Treasure Hunt!!\r\n      <div onClick={cosmoClick} class=\"fade-in-image\"><img src={data.photo} alt=\"cosmo\" style={imgStyle}/></div>\r\n    </Typography>   \r\n  );\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Step1 } from \"./Step1\";\nimport { Header } from \"./components/Header\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Step1} />\n        </Switch>\n      </Router>\n    </>  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { DataProvider } from './DataContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}